5+6
Summary (data)
Summary(data)
mean (data)
data =c(2,4,6)
mean(data)
summary(data)
age = c(45,56,45,56,65,65,43)
mean(c)
sum(c)
age = c(45,56,45,56,65,65,43)
mean(age)
sum(age)
my_age=97
my_weight=65
x=(my_age*my_weight)
print(x)
# Calculating some health parameter
my_age=97
my_weight=65
x=(my_age*my_weight)
print(x)
data("mtcars")
mtcars
library(ggplot2)
library(psych)
View(mtcars)
describe(mpg)
describe(dataset,mtcars)
data("mtcars")
mtcars
View(mtcars)
describe(mpg)
describe(dataset,mtcars)
describe(wt)
describe(disp)
library(psych)
library(ggplot2)
data
data()
BOD
data(BOD)
force(BOD)
View(BOD)
describe(demand)
summary(demand)
dataset = BOD
View(dataset)
summary(demand)
summary(dataset,demand)
describe(dataset,demand)
head(BOD)
describe(demand)
summary(demand)
glimpse(BOD)
describe(dataset)
describe(dataset$demand)
hist(demand)
hist(dataset$demand)
hist(dataset$demand)+
labs(title="Frsgs",x="f",y="n")
library(ggplot2)
dataset = mtcars
View(dataset)
ggplot(dataset,aes(x=mpg,y=wt))+
geom_point()
ggplot(dataset,aes(x=mpg,y=wt))+
geom_point(size=4,shape=15)
ggplot(dataset,aes(x=mpg,y=wt))+
geom_point(size=4,shape=15,color="blue")
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) +
geom_point()
View(dataset)
geom_point()
dataset$cyl = as.factor(dataset$cyl)
class(dataset$cyl)
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl, color = cyl)) +
geom_point()
ggplot(dataset, aes(x = wt, y = mpg, shape = cyl)) +
geom_point()+
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg) +
geom_point()+
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg)+
ggplot(dataset, aes(x = wt, y = mpg))+
geom_point()+
geom_smooth(method = lm)
ggplot(dataset, aes(x = wt, y = mpg))+
geom_point()+
geom_smooth(method = lm,se=FALSE)
ggplot(dataset, aes(x = wt, y = mpg))+
geom_point()+
geom_smooth(method = lm,se=FALSE,linetype="dotted",color="red")
ggplot(dataset, aes(x= wt,y=mpg,color=cyl)) +
geom_point()+
geom_smooth(method=lm,se=FALSE,fullrange=TRUE)
ggplot(dataset, aes(x= wt,y=mpg,color=cyl)) +
geom_point()+
geom_smooth(method=lm,se=FALSE,)
ggplot(dataset, aes(x = wt, y = mpg))+
geom_point()+
geom_smooth(method = lm,se=FALSE,linetype="dotted",color="red")
ggplot(dataset, aes(x = wt, y = mpg))+
geom_point()+
geom_smooth(method = lm,se=FALSE,,color="red")
ggplot(dataset, aes(x = wt, y = mpg))+
geom_point()+
geom_smooth(method = lm,se=FALSE,,color="red")+
labs(title = "Cylunder",x ="weight",y="milage per second")
ggplot(dataset, aes(x = wt, y = mpg))+
geom_point()+
geom_smooth(method = lm,se=FALSE,,color="red")+
labs(title = "Cylunder",x ="weight",y="milage per second")+
theme(legend.position="top")
plot = ggplot(dataset, aes(x = wt, y = mpg))+
geom_point()+
geom_smooth(method = lm,se=FALSE,,color="red")+
labs(title = "Cylunder",x ="weight",y="milage per second")
plot + theme_classic()
plot + theme_minimal()
class(dataset&cyl)
class(dataset$cyl)
setwd("C:/Users/Lenovo/OneDrive/Documents/R-for-Data-Science-and-Machine-Learning-with-NBICT-LAB-Batch-8/RDSML-Day-28 ðŸ‘‰ rbinom(), pbinom(), qbinom(), dbinom() in R")
# Explaining rbinorm()
# rbinorm(n,size,prob) generate random numbers from a binomial distribution
# Here:
# n: number of random values to generate
# size: number of trials in each binomial experiment
#prob: probability of success in each trial
rbinorm(n=10,size=1,prob=0.5)
# Explaining rbinorm()
# rbinorm(n,size,prob) generate random numbers from a binomial distribution
# Here:
# n: number of random values to generate
# size: number of trials in each binomial experiment
#prob: probability of success in each trial
rbinom(n=10,size=1,prob=0.5)
# Here:
#10=Number of random values to generate(n=10)
#1=Number of trials in each binomial experiment(size=1)
#0.5=probablity of success
rbinom(n=10,size=5,prob=0.5)
rbinom(n=10,size=10,prob=0.5)
# Explaining pbinom()
# pbinom gives the cumulative probabiblity of getting fewer successe
# in a binomial distribution
# syntax: pbinom(q,size,prob)
#Here :
# q=The number of successe
# Size = Number of trials
# prob=probability of success in each trial
pbinom(q=5,size=10,prob=0.5)
pbinom(q=3,size=5,prob=0.5)
qbinom(p=.30,size=10,prob=.5)
#Explaining the probability of getting exact number of success
dbinom(x=3,size=5,prob=0.5)
